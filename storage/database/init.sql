CREATE EXTENSION vector;

CREATE TABLE image_hash (
  hash VARCHAR(64) PRIMARY KEY,
  created_at TIMESTAMP NOT NULL
);
COMMENT ON TABLE image_hash IS 'This table tracks seen hashes
which can be consumed by images which were successfully decoded.
That way we can tell which bytes have been or are going to be proccessed
and make sure that no bytes are being proccessed twice.';
COMMENT ON COLUMN image_hash.created_at IS 'We can compare this timestamp
and the timestamp of successfully decoded images to see how long it took
from first seeing the data to decoding it into an image.';

CREATE TABLE image (
  hash VARCHAR(64) PRIMARY KEY REFERENCES image_hash(hash),
  size INTEGER NOT NULL,
  format VARCHAR(10) NOT NULL,
  width INTEGER NOT NULL,
  height INTEGER NOT NULL,
  entropy DOUBLE PRECISION NOT NULL,
  created_at TIMESTAMP NOT NULL,
  dino_embedding VECTOR(1536) DEFAULT NULL,
  clip_embedding VECTOR(768) DEFAULT NULL
);
COMMENT ON COLUMN image.format IS 'The original format of the image.';
COMMENT ON COLUMN image.size IS 'The amount of bytes of the image in the
original format.';
COMMENT ON COLUMN image.dino_embedding IS 'The embedding of the image
generated by the Meta model DINOv2 ViT-g/14 with registers.';
COMMENT ON COLUMN image.clip_embedding IS 'The embedding of the image
generated by the OpenAI model CLIP ViT-L/14.';

CREATE TABLE label (
  hash VARCHAR(64) PRIMARY KEY,
  label TEXT NOT NULL
);
COMMENT ON COLUMN label.hash IS 'The hash of the label text serving as 
shorter reference.';

CREATE TABLE dataset (
  id UUID PRIMARY KEY,
  name VARCHAR(32) NOT NULL UNIQUE,
  created_at TIMESTAMP NOT NULL
);
COMMENT ON TABLE dataset IS 'The datasets serve as a grouping of images.';

CREATE TABLE dataset_image_mapping (
  dataset_id UUID REFERENCES dataset(id),
  image_hash VARCHAR(64) REFERENCES image(hash) ON DELETE CASCADE,
  created_at TIMESTAMP NOT NULL,
  UNIQUE (dataset_id, image_hash)
);
COMMENT ON TABLE dataset_image_mapping IS 'This creates references between
datasets and images. It''s a many to many mapping so images can be part of
multiple datasets and datasets can of course have multiple images.';

CREATE TABLE dataset_image_label_mapping (
  dataset_id UUID REFERENCES dataset(id),
  image_hash VARCHAR(64) REFERENCES image(hash) ON DELETE CASCADE,
  label_hash VARCHAR(64) REFERENCES label(hash) ON DELETE CASCADE,
  UNIQUE (dataset_id, image_hash, label_hash)
);
COMMENT ON TABLE dataset_image_label_mapping IS 'This creates references between
dataset-image tuples and labels. We don''t map directly to the image as the labels aren''t 
supposed to be global but be unique to the image in a specific dataset.';
